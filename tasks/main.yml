---
# tasks file for nebulon.apt_disable_background_tasks
- name: Check if APT periodic updates are enabled
  ansible.builtin.shell: grep 1 -m 1 /etc/apt/apt.conf.d/20auto-upgrades | awk -F '"' '{print $2}'
  # Since we are just printing something out, don't show as making a change to the system
  changed_when: false
  register: apt_check_cmd

- name: Set fact for apt_check_cmd
  ansible.builtin.set_fact:
    apt_check: "{{ apt_check_cmd.stdout }}"

- name: Disable APT periodic updates
  when: apt_check == "1"
  block:
    - name: Set all periodic update options to 0
      ansible.builtin.replace:
        path: /etc/apt/apt.conf.d/10periodic
        regexp: "1"
        replace: "0"
    - name: Set all auto update options to 0
      ansible.builtin.replace:
        path: /etc/apt/apt.conf.d/20auto-upgrades
        regexp: "1"
        replace: "0"
    - name: Disable unattended upgrades
      ansible.builtin.lineinfile:
        path: /etc/apt/apt.conf.d/10periodic
        regexp: "^APT::Periodic::Unattended-Upgrade"
        line: 'APT::Periodic::Unattended-Upgrade "0";'
        mode: '0644'
        create: true
    - name: Stop apt-daily.* systemd services
      ansible.builtin.service:
        name: "{{ item }}"
        state: stopped
      with_items:
        - unattended-upgrades
        - apt-daily.timer
        - apt-daily-upgrade.timer
    - name: Disable apt-daily.* systemd services
      ansible.builtin.systemd:
        name: "{{ service }}"
        enabled: false
        masked: true
      with_items:
        - apt-daily.service
        - apt-daily.timer
        - apt-daily-upgrade.service
        - apt-daily-upgrade.timer
      loop_control:
        loop_var: service
